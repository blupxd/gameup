// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  username      String    @unique
  password      String
  riotId        String?   @unique
  epicId        String?   @unique
  steamid       String?   @unique
  platformRoute String?
  regionalRoute String?
  posts         Post[]
  comments      Comment[] @relation("UserComments")
  invites       Invite[]
  sentInvites   Invite[]  @relation("SentInvites")
}

model Invite {
  id        String   @id @default(cuid())
  userId    String
  postId    String?
  user      User     @relation(fields: [userId], references: [id])
  senderId  String
  message   String
  sender    User     @relation("SentInvites", fields: [senderId], references: [id])
  createdAt DateTime @default(now())
  accepted  String  @default("pending")
}

model Comment {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())
  authorId  String
  author    User      @relation("UserComments", fields: [authorId], references: [id])
  parentId  String?
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentReplies")
}

model Post {
  id           String   @id @default(cuid())
  game         String
  createdAt    DateTime @default(now())
  gameMode     String
  language     String
  rank         String
  rankIcon     String
  microphone   Boolean  @default(false)
  authorId     String
  winRate      String
  note         String
  gameUsername String
  author       User     @relation(fields: [authorId], references: [id])
}
